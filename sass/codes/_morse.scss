
// SassyPher
// Code: Morse
// -----------


// require `char-at` from `extend/chars`
// require `split` from `helpers/strings`
// require `map-search` from `helpers/maps`


// Morse code
// https://en.wikipedia.org/wiki/Morse_code

$morse: (
  A: '.-',
  B: '-...',
  C: '-.-.',
  D: '-..',
  E: '.',
  F: '..-.',
  G: '--.',
  H: '....',
  I: '..',
  J: '.---',
  K: '-.-',
  L: '.-..',
  M: '--',
  N: '-.',
  O: '---',
  P: '.--.',
  Q: '--.-',
  R: '.-.',
  S: '...',
  T: '-',
  U: '..-',
  V: '...-',
  W: '.--',
  X: '-..-',
  Y: '-.--',
  Z: '--..',
  0: '-----',
  1: '.----',
  2: '..---',
  3: '...--',
  4: '....-',
  5: '.....',
  6: '-....',
  7: '--...',
  8: '---..',
  9: '----.',
  '.': '.-.-.-',
  ',': '--..--',
  '?': '..--..',
  '-': '-....-',
  '=': '-...-',
  ':': '---...',
  ';': '-.-.-.',
  '(': '-.--.',
  ')': '-.--.-',
  '/': '-..-.',
  '"': '.-..-.',
  '$': '...-..-',
  "'": '.----.',
  '¶': '.-.-..',
  '_': '..--.-',
  '@': '.--.-.',
  '!': '-.-.--',
  '+': '.-.-.',
  '~': '.-...',
  '#': '...-.-',
  '&': '. ...',
  '⁄': '-..-.',
  ' ': '/'
);


// Morse encoder
// --------
// @param [string] $message
// --------
// @return [string]

@function morse-encode(
  $message
) {
  @if type-of($message) != string {
    @warn '`$message` must be a string, #{type-of($message)} given.';
  }

  $length: str-length($message);
  $result: '';

  @for $i from 1 through $length {
    $char: to-upper-case(char-at($message, $i));
    $encoded: if(map-has-key($morse, $char), map-get($morse, $char), '?');
    $result: $result + $encoded + if($i < $length, ' ', '')
  }

  @return $result;
}


// Morse decoder
// --------
// @param [string] $message
// --------
// @return [string]

@function morse-decode(
  $message
) {
  @if type-of($message) != string {
    @warn '`$message` must be a string, #{type-of($message)} given.';
  }

  $message: str-split($message, ' ');
  $result: '';

  @each $part in $message {
    $char: map-search($morse, $part);
    @if $char {
      $result: $result + $char;
    }
  }

  @return to-lower-case($result);
}
