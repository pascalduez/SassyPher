
// SassyPher
// Cipher: vigenère
// ----------------


// Vigenère cipher encoder/decoder.
// --------
// @param [string] $message
// @param [list] $key
// --------
// @return [string]

@function vigenere(
  $message,
  $key
) {
  $length: length($key);
  $result: '';

  $j: 1;
  @for $i from 1 through str-length($message) {
    $col: char-code-at($message, $i);
    $match: '';

    @if $col {
      // Uppercase $col <= 26
      // Lowercase $col > 26
      $pos: if($col > 26, 27, 1);
      $match: (($col - $pos) + nth($key, (($j - 1) % $length + 1))) % 26 + $pos;
      $match: from-char-code($match);
      $j: $j + 1;
    }
    @else {
      // Non [A-Za-z] char.
      $match: str-slice($message, $i, $i);
    }

    $result: $result + $match;
  }

  @return $result;
}


// Encrypt a `$message` with the vigenère cipher based on `$key`.
// --------
// @param [string] $message
// @param [string] $key
// --------
// @return [string]

@function vigenere-encrypt(
  $message,
  $key
) {
  @return vigenere($message, key($key));
}


// Decrypt a vigenère encrypted `$message` based on `$key`.
// --------
// @param [string] $message
// @param [string] $key
// --------
// @return [string]

@function vigenere-decrypt(
  $message,
  $key
) {
  $key: key($key);
  @for $i from 1 through length($key) {
    $key: set-nth($key, $i, (26 - nth($key, $i) % 26));
  }
  @return vigenere($message, $key);
}
